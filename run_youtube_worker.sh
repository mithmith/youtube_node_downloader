#!/bin/bash

##################################################################
# Usage: 
#   run_youtube_worker.sh start /path/to/some.env /path/to/list.json [-d]
#   run_youtube_worker.sh stop  /path/to/some.env /path/to/list.json
#   run_youtube_worker.sh logs  /path/to/some.env /path/to/list.json
#   run_youtube_worker.sh restart ...
##################################################################

ACTION=$1           # start|stop|logs|restart
ENV_FILE=$2         # /path/to/*.env
CHANNELS_JSON=$3    # /path/to/*.json
MODE=$4             # -d –∏–ª–∏ –ø—É—Å—Ç–æ

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [[ -z "$ACTION" || -z "$ENV_FILE" ]]; then
  echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ (start|stop|logs|restart) –∏ –ø—É—Ç—å –∫ .env —Ñ–∞–π–ª—É!"
  echo "–ü—Ä–∏–º–µ—Ä: $0 start /home/localserver/channels/workerchronicles/workerchronicles.env /home/localserver/channels/workerchronicles/workerchronicles.json [-d]"
  exit 1
fi

# –ï—Å–ª–∏ start, —Ç–æ —Ç—Ä–µ–±—É–µ–º JSON-—Ñ–∞–π–ª
if [[ "$ACTION" == "start" && -z "$CHANNELS_JSON" ]]; then
  echo "‚ùå –û—à–∏–±–∫–∞: –¥–ª—è –∫–æ–º–∞–Ω–¥—ã start –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å JSON-—Ñ–∞–π–ª!"
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [[ ! -f "$ENV_FILE" ]]; then
  echo "‚ùå –û—à–∏–±–∫–∞: .env —Ñ–∞–π–ª '$ENV_FILE' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
  exit 1
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env (—É–±–∏—Ä–∞—è —Å—Ç—Ä–æ–∫–∏ —Å #)
export $(grep -v '^#' "$ENV_FILE" | xargs)

# --------------------------------------------------------------------
# –ì–æ—Ç–æ–≤–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–µ—Å–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ—Ç, –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç)
# --------------------------------------------------------------------
if [[ -z "$DOCKER_NETWORK" ]]; then
  DOCKER_NETWORK="proxy_net"
fi

if [[ -z "$DOCKER_IMAGE" ]]; then
  DOCKER_IMAGE="youtube-monitoring-app"
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ JSON-—Ñ–∞–π–ª–∞ (–±–µ–∑ .json)
if [[ "$ACTION" == "start" ]]; then
  CONTAINER_NAME="youtube-$(basename "$CHANNELS_JSON" .json)"
else
  # –î–ª—è stop/logs/restart ‚Äî –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ
  CONTAINER_NAME="youtube-$(basename "$CHANNELS_JSON" .json)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∫–∞–∑–∞–Ω–Ω–∞—è —Å–µ—Ç—å, –µ—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º
if ! docker network ls --format '{{.Name}}' | grep -q "^$DOCKER_NETWORK$"; then
  echo "üåê –°–µ—Ç—å $DOCKER_NETWORK –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞—é..."
  docker network create "$DOCKER_NETWORK"
  if [[ $? -ne 0 ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Ç–∏ $DOCKER_NETWORK!"
    exit 1
  fi
fi

# –°–±–æ—Ä–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–π (–µ—Å–ª–∏ HOST_* –∏ *PATH –∑–∞–¥–∞–Ω—ã)
#  1) –õ–û–ì–ò
if [[ -n "$HOST_LOGS_PATH" && -n "$LOGS_PATH" ]]; then
  mkdir -p "$HOST_LOGS_PATH"
  MOUNT_LOGS="-v \"$(realpath "$HOST_LOGS_PATH"):$LOGS_PATH\""
else
  MOUNT_LOGS=""
fi

#  2) –•–†–ê–ù–ò–õ–ò–©–ï
if [[ -n "$HOST_STORAGE_PATH" && -n "$STORAGE_PATH" ]]; then
  mkdir -p "$HOST_STORAGE_PATH"
  MOUNT_STORAGE="-v \"$(realpath "$HOST_STORAGE_PATH"):$STORAGE_PATH\""
else
  MOUNT_STORAGE=""
fi

# 3) –®–∞–±–ª–æ–Ω—ã: new_video.md
if [[ -n "$HOST_TG_NEW_VIDEO_TEMPLATE" && -n "$TG_NEW_VIDEO_TEMPLATE" && -f "$HOST_TG_NEW_VIDEO_TEMPLATE" ]]; then
  MOUNT_NEW_VIDEO="-v \"$(realpath "$HOST_TG_NEW_VIDEO_TEMPLATE"):$TG_NEW_VIDEO_TEMPLATE\""
else
  MOUNT_NEW_VIDEO=""
fi

# 4) –®–∞–±–ª–æ–Ω—ã: shorts.md
if [[ -n "$HOST_TG_SHORTS_TEMPLATE" && -n "$TG_SHORTS_TEMPLATE" && -f "$HOST_TG_SHORTS_TEMPLATE" ]]; then
  MOUNT_SHORTS="-v \"$(realpath "$HOST_TG_SHORTS_TEMPLATE"):$TG_SHORTS_TEMPLATE\""
else
  MOUNT_SHORTS=""
fi

# –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –º–æ–Ω—Ç–∏—Ä—É–µ–º –≤ /app/channels_list.json (–≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
# (–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —á–∏—Ç–∞—Ç—å –∏–º–µ–Ω–Ω–æ /app/channels_list.json, –ª–∏–±–æ –±–µ—Ä—ë—Ç –ø—É—Ç—å –∏–∑ env)
if [[ "$ACTION" == "start" ]]; then
  if [[ ! -f "$CHANNELS_JSON" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª JSON '$CHANNELS_JSON' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
  fi
  MOUNT_CHANNELS="-v \"$(realpath "$CHANNELS_JSON"):/app/channels_list.json\""
fi

# –°–æ–±–∏—Ä–∞–µ–º docker run –∫–æ–º–∞–Ω–¥—É
RUN_CMD="
docker run \
--name \"$CONTAINER_NAME\" \
--network \"$DOCKER_NETWORK\" \
--env-file \"$ENV_FILE\" \
$MOUNT_LOGS \
$MOUNT_STORAGE \
$MOUNT_NEW_VIDEO \
$MOUNT_SHORTS \
$MOUNT_CHANNELS \
"

# –ï—Å–ª–∏ –ø—Ä–æ—Å–∏–ª–∏ —Ñ–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º
if [[ "$MODE" == "-d" ]]; then
  RUN_CMD="$RUN_CMD -d"
else
  # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ + —É–¥–∞–ª—è—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
  RUN_CMD="$RUN_CMD --rm"
fi

# –î–æ–ø–æ–ª–Ω—è–µ–º —É–∫–∞–∑–∞–Ω–∏–µ–º –æ–±—Ä–∞–∑–∞
RUN_CMD="$RUN_CMD $DOCKER_IMAGE
"

# -------------------------------------------------------------------
# –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç ACTION
# -------------------------------------------------------------------
case "$ACTION" in
  start)
    # –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–∂–µ –µ—Å—Ç—å (–≤ –ª—é–±–æ–º —Å—Ç–∞—Ç—É—Å–µ), —Å—Ç–æ–ø/—É–¥–∞–ª–µ–Ω–∏–µ
    if docker ps -a --format '{{.Names}}' | grep -q "^$CONTAINER_NAME$"; then
      echo "‚ö†Ô∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∏ —É–¥–∞–ª—è—é..."
      docker stop "$CONTAINER_NAME"
      docker rm "$CONTAINER_NAME"
    fi

    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: $CONTAINER_NAME"
    echo "   –û–±—Ä–∞–∑:  $DOCKER_IMAGE"
    echo "   –°–µ—Ç—å:   $DOCKER_NETWORK"
    echo "   JSON:   $CHANNELS_JSON"
    eval "$RUN_CMD"
    ;;
  
  stop)
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: $CONTAINER_NAME..."
    docker stop "$CONTAINER_NAME"
    ;;
  
  logs)
    echo "üìú –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $CONTAINER_NAME..."
    docker logs -f "$CONTAINER_NAME"
    ;;
  
  restart)
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $CONTAINER_NAME..."
    docker stop "$CONTAINER_NAME"
    sleep 2
    docker start "$CONTAINER_NAME"
    ;;
  
  *)
    echo "Usage: $0 {start|stop|logs|restart} /path/to/envfile /path/to/json [-d]"
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 start   /home/user/my.env /home/user/list.json      # –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤"
    echo "  $0 start   /home/user/my.env /home/user/list.json -d   # –≤ —Ñ–æ–Ω–µ"
    echo "  $0 stop    /home/user/my.env /home/user/list.json      # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo "  $0 logs    /home/user/my.env /home/user/list.json      # –ª–æ–≥–∏"
    echo "  $0 restart /home/user/my.env /home/user/list.json      # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    exit 1
    ;;
esac
